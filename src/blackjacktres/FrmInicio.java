/**
 * a)
 * Missael Flores Gonz치lez 16410118.
 * Osvaldo Bosquez Garcia 16410108.
 *
 * b)
 * 12/06/2018
 *
 * c)
 * 52 horas aprox.
 *
 * d)
 * En este proyecto tuvimos 3 principales problemas.
 * 1) No sabiamos como empezar.
 * Al principio no entendiamos muy bien como comenzar a trabajar, queriamos hacer
 * todo al mismo tiempo, esto creo muchos problemas en el codigo hasta que decidimos
 * volver a empezar.
 *
 * 2) Volver a comenzar.
 * Una vez que decidimos volver a empezar todo fue m치s facil, ya que ahora
 * nos enfocamos en completar tareas especificas por dia. De igual forma, esto
 * fue un contratiempo ya que volvimos a empezar de cero.
 *
 * 3) Pensar.
 * Sin duda una de los mayores contratiempos fue el echo de pensar en formas
 * de que el codigo funcionaram, en ocasiones nos tamaba todo un dia o dos
 * pensar en alguna forma de hacerlo funcionar.
 *
 * e)
 * Este proyecto sin duda alguna nos ayudo mucho a comprender la programaci칩n en
 * java y reafirmar nuestros conocimientos previamente adquiridos.
 * De igual forma pude aquirir nuevos conocimientos y nos ayudo a desarrollar
 * un pensamiento analitico para la soluci칩n de problemas dificiles.
 *
 * f)
 *
 * codigo que fue usado para la base de nuestro proyecto.
 * https://www.taringa.net/posts/ciencia-educacion/15381041/Codigo-de-Blackjack-en-java-netbeans.html
 *
 * Codigo para obtener el maximo valor de una lista.
 * https://stackoverflow.com/questions/8304767/how-to-get-maximum-value-from-the-list-arraylist
 *
 * Codigo para borrar todos los elementos de una lista.
 * https://stackoverflow.com/questions/17279519/removing-items-from-a-list
 *
 */
package blackjacktres;

import java.awt.Toolkit;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author missa
 */
public class FrmInicio extends javax.swing.JFrame {

    /**
     * Creates new form FrmInicio
     */
    public FrmInicio() {
        initComponents();
        setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("icono\\icon.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        btnCliente = new javax.swing.JButton();
        btnServidor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BlackJack");
        setMinimumSize(new java.awt.Dimension(640, 385));
        setResizable(false);
        setSize(new java.awt.Dimension(650, 390));
        getContentPane().setLayout(null);

        btnSalir.setBackground(new java.awt.Color(255, 255, 255));
        btnSalir.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(10, 150, 95, 61);

        btnCliente.setBackground(new java.awt.Color(255, 255, 255));
        btnCliente.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnCliente.setMnemonic('C');
        btnCliente.setText("Cliente");
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnCliente);
        btnCliente.setBounds(10, 80, 95, 61);

        btnServidor.setBackground(new java.awt.Color(255, 255, 255));
        btnServidor.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnServidor.setMnemonic('S');
        btnServidor.setText("Servidor");
        btnServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServidorActionPerformed(evt);
            }
        });
        getContentPane().add(btnServidor);
        btnServidor.setBounds(10, 10, 95, 61);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Blackjack.jpeg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 640, 380);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * En este boton abrimos el FrmJuego usando el constructor del servidor. No
     * requerimos pasar ninguna variable ya que de eso se va a encargar el
     * FrmJuego.
     *
     * @param evt
     */
    private void btnServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServidorActionPerformed
        FrmJuego juego = new FrmJuego();
        juego.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnServidorActionPerformed

    /**
     * En este boton iniciamos la conexion del cliente al servidor, primero
     * preguntamos al cliente la direccion ip del servidor y su nombre,
     * Conectamos al cliente con el servidor y llamamos al constructor del
     * FrmJuego pero como cliente, es por eso que le mandamos un socket como
     * parametro.
     *
     * @param evt
     */
    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed
        try {
            String nombre = null;
            while (nombre == null || nombre.trim().isEmpty()) {
                nombre = JOptionPane.showInputDialog(this, "Se requiere tu nombre para continuar");
            }

            String ip = JOptionPane.showInputDialog("Ingresa la direccion ip del servidor:");
            Socket so = new Socket(ip, 5000);

            FrmJuego juego = new FrmJuego(so, nombre);

            juego.setVisible(true);
            this.dispose();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Erro al conectar con el servidor:");
        }


    }//GEN-LAST:event_btnClienteActionPerformed
    /**
     * Este boton solo se encarga de salir del juego en caso de no quere jugar.
     *
     * @param evt
     */
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * &
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Thread.sleep(1000);
                } catch (Exception e) {

                }
                new FrmInicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCliente;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnServidor;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
